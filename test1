import pandas as pd
import numpy as np
from keras import Model
import keras.backend as K
from keras.layers import Embedding, Reshape, Input, Dot


# 获得用户数和电影数
ratings_df = pd.read_csv("C:/Users/L/Desktop/ratings.csv",sep=",")


# 添加电影Id的索引
movies_df = pd.read_csv('C:/Users/L/Desktop/movies.csv')
movies_df['movieRow'] = movies_df.index
movies_df = movies_df[['movieRow', 'movieId', 'title']]
# print(movies_df)

# 提取用户Id、电影索引、评分生成新的数组，便于后面的使用
ratings_df = pd.merge(ratings_df, movies_df, on='movieId')
ratings_df = ratings_df[['userId', 'movieRow', 'rating']]
# print(ratings_df)

# print(num_user,num_movie)

# 获取行数和列数，填充评分，形成打分矩阵

num_user = np.max(ratings_df["userId"])
num_movie = np.max(movies_df['movieRow'])+1

# print(num_user)
# print(num_movie)


train_user = ratings_df["userId"].values
train_movie = ratings_df["movieRow"].values
train_x = [train_user,train_movie]
train_y = ratings_df["rating"].values

array = np.zeros((num_user+1,num_movie+1))
# print(array)
# print(array.shape)

for index,row in ratings_df.iterrows():
    int1 = int(row['userId'])
    int2 = int(row['movieRow'])
    array[int1,int2] = row['rating']

print(array)
print(array.shape)
# print(array.dtype)
record = np.array(array>0,dtype=int)
print(record)

K.clear_session()


def Recmand_model(num_user, num_movie, k):
    input_uer = Input(shape=[None, ], dtype="int32")
    model_uer = Embedding(num_user + 1, k, input_length=1)(input_uer)
    model_uer = Reshape((k,))(model_uer)

    input_movie = Input(shape=[None, ], dtype="int32")
    model_movie = Embedding(num_movie + 1, k, input_length=1)(input_movie)
    model_movie = Reshape((k,))(model_movie)

    # 矩阵分解
    out = Dot(1)([model_uer, model_movie])
    model = Model(inputs=[input_uer, input_movie], outputs=out)
    model.compile(loss='mse', optimizer='Adam',metrics=['accuracy'])
    model.summary()
    return model


model = Recmand_model(num_user,num_movie,100)



model.fit(train_x,train_y,batch_size = 150,epochs =20)

# result = model.predict(record)

name = input("请输入用户名：")
user = int(name)
result = np.array([])

for i in range(num_movie):
    temp = model.predict([[user],[i]])
    result = np.append(result,temp)

print(user)
print(result)

for i in range(num_movie):
    if record[user][i] == 1 :
        result[i] = 0
recommend = np.argsort(result)

a = recommend[-1]
b = recommend[-2]
c = recommend[-3]
d = recommend[-4]
e = recommend[-5]
print('为用户%d推荐的电影为：\n1:%s\n2:%s\n3:%s\n4:%s\n5:%s。' \
      % (user,movies_df.iloc[a]['title'], movies_df.iloc[b]['title'], movies_df.iloc[c]['title'], movies_df.iloc[d]['title'],movies_df.iloc[e]['title']))
